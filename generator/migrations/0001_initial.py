# Generated by Django 5.0.4 on 2024-06-19 17:03

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AddPGInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(blank=True, choices=[('Sylhet', 'Sylhet'), ('Rangpur', 'Rangpur')], max_length=100, null=True)),
                ('zone', models.CharField(blank=True, choices=[('Sylhet', 'Sylhet'), ('Moulovibazar', 'Moulovibazar'), ('Mymensingh', 'Mymensingh'), ('Kisorganj', 'Kisorganj'), ('Tangail', 'Tangail'), ('Rangpur', 'Rangpur'), ('Dinajpur', 'Dinajpur'), ('Bagura', 'Bagura'), ('Rajshahi', 'Rajshahi')], max_length=100, null=True)),
                ('mp', models.CharField(blank=True, choices=[('Sylhet', 'Sylhet'), ('Taherpur', 'Taherpur'), ('Sunamganj', 'Sunamganj'), ('Bianibazar', 'Bianaibazar'), ('Dorbhost', 'Dorbhost'), ('Dherai', 'Dherai'), ('Chatak', 'Chatak'), ('Moulovibazar', 'Moulovibazar'), ('Baniachong', 'Baniachong'), ('Juri', 'Juri'), ('Saestaganj', 'Saestaganj'), ('Mymensingh', 'Mymensingh'), ('Fulpur', 'Fulpur'), ('Valuka', 'Valuka'), ('Kisorganj', 'Kisorganj'), ('Netrokona', 'Netrokona'), ('Katiadi', 'Katiadi'), ('Mohonganj', 'Mohonganj'), ('Austogram', 'Austogram'), ('Tangail', 'Tangail'), ('Madhupur', 'Madhupur'), ('Jamalpur', 'Jamalpur'), ('Sherpur', 'Sherpur'), ('Bakshiganj', 'Bakshiganj'), ('Rangpur', 'Rangpur'), ('Hatibandha', 'Hatibandha'), ('Gaibandha', 'Gaibandha'), ('Ulipur', 'Ulipur'), ('Boropar', 'Boropar'), ('Polasbari', 'Polasbari'), ('Dinajpur', 'Dinajpur'), ('Panchghor', 'Panchghor'), ('Jaldhaka', 'Jaldhaka'), ('Thakurgaon', 'Thakurgaon'), ('Rajshahi', 'Rajshahi'), ('Bagura', 'Bagurar'), ('Nachole', 'Nachole'), ('Natore', 'Natore'), ('Chapai', 'Chapai'), ('Bagura', 'Bagura')], max_length=100, null=True)),
                ('PG_code', models.CharField(default='None', max_length=50)),
                ('PGNumber', models.CharField(default='None', max_length=50)),
                ('PG_brand', models.CharField(choices=[('Honda', 'Honda'), ('Mistsubishi', 'Mistsubishi'), ('wilson', 'wilson'), ('chinese', 'chinese')], default='None', max_length=50)),
                ('PG_serial_number', models.CharField(default='None', max_length=50)),
                ('PG_capacity', models.CharField(choices=[('5kva', '5kva'), ('6kva', '6kva'), ('8kva', '8kva')], default='None', max_length=50)),
                ('PG_supplier', models.CharField(choices=[('vendor1', 'vendor1'), ('vendor2', 'vendor2'), ('vendor3', 'vendor3'), ('own', 'own')], default='None', max_length=50)),
                ('PG_status', models.CharField(blank=True, choices=[('good', 'good'), ('faulty', 'faulty')], max_length=100, null=True)),
                ('PG_purchase_date', models.DateField(default=django.utils.timezone.now)),
                ('PG_hire_date', models.DateField(default=django.utils.timezone.now)),
                ('PG_supporting_documents', models.FileField(blank=True, null=True, upload_to='PG_documents/')),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('updated_at', models.DateField(default=django.utils.timezone.now)),
                ('PG_add_requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PGad_admin_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PGFaultRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(blank=True, choices=[('Sylhet', 'Sylhet'), ('Rangpur', 'Rangpur')], max_length=100, null=True)),
                ('zone', models.CharField(blank=True, choices=[('Sylhet', 'Sylhet'), ('Moulovibazar', 'Moulovibazar'), ('Mymensingh', 'Mymensingh'), ('Kisorganj', 'Kisorganj'), ('Tangail', 'Tangail'), ('Rangpur', 'Rangpur'), ('Dinajpur', 'Dinajpur'), ('Bagura', 'Bagura'), ('Rajshahi', 'Rajshahi')], max_length=100, null=True)),
                ('mp', models.CharField(blank=True, choices=[('Sylhet', 'Sylhet'), ('Taherpur', 'Taherpur'), ('Sunamganj', 'Sunamganj'), ('Bianibazar', 'Bianaibazar'), ('Dorbhost', 'Dorbhost'), ('Dherai', 'Dherai'), ('Chatak', 'Chatak'), ('Moulovibazar', 'Moulovibazar'), ('Baniachong', 'Baniachong'), ('Juri', 'Juri'), ('Saestaganj', 'Saestaganj'), ('Mymensingh', 'Mymensingh'), ('Fulpur', 'Fulpur'), ('Valuka', 'Valuka'), ('Kisorganj', 'Kisorganj'), ('Netrokona', 'Netrokona'), ('Katiadi', 'Katiadi'), ('Mohonganj', 'Mohonganj'), ('Austogram', 'Austogram'), ('Tangail', 'Tangail'), ('Madhupur', 'Madhupur'), ('Jamalpur', 'Jamalpur'), ('Sherpur', 'Sherpur'), ('Bakshiganj', 'Bakshiganj'), ('Rangpur', 'Rangpur'), ('Hatibandha', 'Hatibandha'), ('Gaibandha', 'Gaibandha'), ('Ulipur', 'Ulipur'), ('Boropar', 'Boropar'), ('Polasbari', 'Polasbari'), ('Dinajpur', 'Dinajpur'), ('Panchghor', 'Panchghor'), ('Jaldhaka', 'Jaldhaka'), ('Thakurgaon', 'Thakurgaon'), ('Rajshahi', 'Rajshahi'), ('Bagura', 'Bagurar'), ('Nachole', 'Nachole'), ('Natore', 'Natore'), ('Chapai', 'Chapai'), ('Bagura', 'Bagura')], max_length=100, null=True)),
                ('fault_date', models.DateField(blank=True, null=True)),
                ('repair_date', models.DateField(blank=True, null=True)),
                ('fault_duration', models.DurationField(blank=True, null=True)),
                ('fault_description', models.TextField(blank=True, max_length=200, null=True)),
                ('fault_type', models.CharField(blank=True, choices=[('air_filter_problem', 'air_filter_problem'), ('oil_filter_problem', 'oil_filter_problem'), ('engine_problem', 'engine_problem'), ('others', 'others')], max_length=200, null=True)),
                ('action_taken', models.CharField(blank=True, max_length=200, null=True)),
                ('repair_by', models.CharField(blank=True, max_length=100, null=True)),
                ('repair_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('updated_at', models.DateField(default=django.utils.timezone.now)),
                ('pgnumber', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pgfault', to='generator.addpginfo')),
            ],
        ),
        migrations.CreateModel(
            name='PGFuelRefill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(blank=True, choices=[('Sylhet', 'Sylhet'), ('Rangpur', 'Rangpur')], max_length=100, null=True)),
                ('zone', models.CharField(blank=True, choices=[('Sylhet', 'Sylhet'), ('Moulovibazar', 'Moulovibazar'), ('Mymensingh', 'Mymensingh'), ('Kisorganj', 'Kisorganj'), ('Tangail', 'Tangail'), ('Rangpur', 'Rangpur'), ('Dinajpur', 'Dinajpur'), ('Bagura', 'Bagura'), ('Rajshahi', 'Rajshahi')], max_length=100, null=True)),
                ('mp', models.CharField(blank=True, choices=[('Sylhet', 'Sylhet'), ('Taherpur', 'Taherpur'), ('Sunamganj', 'Sunamganj'), ('Bianibazar', 'Bianaibazar'), ('Dorbhost', 'Dorbhost'), ('Dherai', 'Dherai'), ('Chatak', 'Chatak'), ('Moulovibazar', 'Moulovibazar'), ('Baniachong', 'Baniachong'), ('Juri', 'Juri'), ('Saestaganj', 'Saestaganj'), ('Mymensingh', 'Mymensingh'), ('Fulpur', 'Fulpur'), ('Valuka', 'Valuka'), ('Kisorganj', 'Kisorganj'), ('Netrokona', 'Netrokona'), ('Katiadi', 'Katiadi'), ('Mohonganj', 'Mohonganj'), ('Austogram', 'Austogram'), ('Tangail', 'Tangail'), ('Madhupur', 'Madhupur'), ('Jamalpur', 'Jamalpur'), ('Sherpur', 'Sherpur'), ('Bakshiganj', 'Bakshiganj'), ('Rangpur', 'Rangpur'), ('Hatibandha', 'Hatibandha'), ('Gaibandha', 'Gaibandha'), ('Ulipur', 'Ulipur'), ('Boropar', 'Boropar'), ('Polasbari', 'Polasbari'), ('Dinajpur', 'Dinajpur'), ('Panchghor', 'Panchghor'), ('Jaldhaka', 'Jaldhaka'), ('Thakurgaon', 'Thakurgaon'), ('Rajshahi', 'Rajshahi'), ('Bagura', 'Bagurar'), ('Nachole', 'Nachole'), ('Natore', 'Natore'), ('Chapai', 'Chapai'), ('Bagura', 'Bagura')], max_length=100, null=True)),
                ('fuel_refill_code', models.CharField(default='None', max_length=50)),
                ('refill_date', models.DateField(default=django.utils.timezone.now)),
                ('fuel_type', models.CharField(blank=True, choices=[('diesel', 'diesel'), ('octane', 'octane'), ('petrol', 'petrol')], default='None', max_length=100, null=True)),
                ('refill_type', models.CharField(choices=[('pump', 'pump'), ('local_purchase', 'Local Purchase')], default='pump', max_length=20)),
                ('refill_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('fuel_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('fuel_cost', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('fuel_supplier_name', models.CharField(default='None', max_length=50)),
                ('fuel_supplier_phone', models.CharField(default='None', max_length=50)),
                ('fuel_supplier_address', models.TextField(blank=True, default='None', null=True)),
                ('refill_supporting_documents', models.FileField(blank=True, null=True, upload_to='PG_refill_slips/')),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('fuel_pump', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='pump_data_info', to='common.fuelpumpdatabase')),
                ('pgnumber', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pg_refill', to='generator.addpginfo')),
                ('refill_requester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pg_refill_requester_name', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
